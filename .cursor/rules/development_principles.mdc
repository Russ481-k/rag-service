---
alwaysApply: false
---

# 2. 개발 원칙 및 방법론 (Development Principles & Methodology)

본 프로젝트는 코드의 품질, 안정성, 유지보수성을 높이기 위해 다음과 같은 개발 원칙과 방법론을 준수합니다.

## 1. 테스트 주도 개발 (Test-Driven Development, TDD)

- **원칙**: 새로운 기능을 추가하거나 기존 코드를 수정하기 전에, 반드시 해당 기능의 요구사항을 검증하는 **테스트 코드를 먼저 작성**합니다.
- **프로세스**:
  1.  **Red**: 실패하는 테스트 케이스를 작성합니다.
  2.  **Green**: 테스트를 통과하는 최소한의 코드를 작성합니다.
  3.  **Refactor**: 코드의 구조를 개선하고 중복을 제거합니다.
- **기대 효과**:
  - 코드의 안정성 및 신뢰도 향상.
  - 설계 개선 및 명확한 요구사항 정의.
  - 향후 리팩토링에 대한 자신감 확보.

## 2. 사용자 지정 개발 정책 준수

- **MCP context7 활용**: 계획, 설계, 개발의 모든 단계에서 **MCP context7**의 내용을 참고하고 반영하여 일관된 개발 방향을 유지합니다.
- **기존 코드 존중**: 기존에 작성된 코드의 스타일과 구조를 최대한 존중하며, 새로운 기능을 추가할 때는 **최소한의 수정**으로 통합하는 것을 목표로 합니다.
- **지시사항 우선**: 사용자의 명시적인 지시사항을 최우선으로 따르며, 임의로 요구사항을 변경하거나 확장하지 않습니다.

## 3. 코드 스타일 및 명료성

- **단순성**: 필요 이상으로 코드를 복잡하게 모듈화하거나 추상화하지 않습니다. 명확하고 이해하기 쉬운 코드를 지향합니다.
- **일관성**: 프로젝트 전반에 걸쳐 일관된 네이밍 컨벤션과 코드 스타일을 유지합니다. (e.g., Black, isort)
