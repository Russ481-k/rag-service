---
alwaysApply: true
---

# 6. 배포 전략 (Deployment Strategy)

본 프로젝트는 초기 개발 속도와 단순성을 최우선으로 고려하여 배포 전략을 수립한다.

## 핵심 전략

**"시작은 간결하게, 확장은 유연하게 (Start Simple, Scale Flexibly)"**

초기 개발 및 프로덕션 배포에는 **Docker Compose**를 사용한다. 이는 복잡한 인프라 설정에 드는 시간을 최소화하고, 애플리케이션의 핵심 기능 구현에 집중하기 위함이다.

## 기술 선택 근거

- **Docker Compose**: 단일 서버 환경에서 FastAPI, Celery Worker, Redis 등 여러 컨테이너를 정의하고 실행하는 데 가장 효율적이고 직관적인 도구이다. 로컬 개발 환경과 프로덕션 환경의 일관성을 유지하는 데에도 유리하다.

## 미래 확장 계획

- **Kubernetes**: 서비스가 성장하여 대규모 트래픽 처리, 자동 스케일링, 무중단 배포 등의 고급 기능이 필요해지는 시점에는 **Kubernetes**로의 마이그레이션을 고려한다.
- 현재의 컨테이너 기반 아키텍처는 이러한 미래의 전환을 용이하게 만드는 기반이 된다.

## 관련 문서

- 이 전략의 구체적인 실행 방법은 [배포 안내서](mdc:docs/ops/Deployment.md)를 따른다.
