---
alwaysApply: true
---

# 1. 핵심 기술 스택 (Core Technology Stack)

본 프로젝트는 다음과 같은 핵심 기술 스택을 기반으로 구축됩니다. 코드 작성, 라이브러리 추가, 아키텍처 설계 시 반드시 아래 기술 스택을 우선적으로 고려하고 일관성을 유지해야 합니다.

## 주요 기술

- **Backend Framework**: **FastAPI**

  - Python 3.13.3 기반의 현대적이고 빠른 웹 프레임워크.

- **LLM & Embedding Model**: **Gemini**

  - Google의 Gemini 모델을 핵심 언어 모델 및 임베딩 생성 모델로 사용합니다.

- **Vector Store**: **Supabase (pgvector)**

  - 문서 벡터와 메타데이터를 저장, 인덱싱, 검색하기 위한 주 저장소로 Supabase의 PostgreSQL 기반 pgvector 확장을 사용합니다.

- **Asynchronous Task Queue**: **Celery & Redis**
  - **Celery**: 시간이 오래 걸리는 작업을 백그라운드에서 처리하기 위한 분산 작업 큐 시스템.
  - **Redis**: Celery의 메시지 브로커(Message Broker) 및 결과 백엔드(Result Backend) 역할을 수행하는 인메모리 데이터 저장소.

## 선택 근거

- **FastAPI**: 높은 성능, 자동 API 문서 생성, Pydantic을 통한 강력한 데이터 유효성 검사 기능을 제공하여 생산성과 안정성을 모두 만족시킵니다.
- **Gemini**: 강력한 멀티모달 기능과 높은 추론 성능을 제공하여 고도화된 RAG 서비스의 요구사항에 부합합니다.
- **Supabase**: 관리형 PostgreSQL을 제공하여 운영 부담이 적고, pgvector 확장을 통해 벡터 검색 기능을 손쉽게 구현할 수 있습니다.
- **Celery & Redis**: Python 생태계에서 가장 표준적이고 안정적인 비동기 처리 조합으로, 대규모 작업 처리에도 검증된 성능을 보여줍니다.
